{
  "componentDescription": "",
  "propDescriptions": {},
  "classDescriptions": {
    "actionsCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the root element of the cell with type=\"actions\""
    },
    "aggregationColumnHeader": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element of the column header",
      "conditions": "aggregated"
    },
    "aggregationColumnHeader--alignLeft": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element of the header",
      "conditions": "aggregation if <code>headerAlign=\"left\"</code>"
    },
    "aggregationColumnHeader--alignCenter": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element of the header",
      "conditions": "aggregation if <code>headerAlign=\"center\"</code>"
    },
    "aggregationColumnHeader--alignRight": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element of the header",
      "conditions": "aggregation if <code>headerAlign=\"right\"</code>"
    },
    "aggregationColumnHeaderLabel": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the aggregation label in the column header",
      "conditions": "aggregated"
    },
    "autoHeight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>autoHeight={true}</code>"
    },
    "booleanCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the icon of the boolean cell"
    },
    "cell--editable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "the cell is editable"
    },
    "cell--editing": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "the cell is in edit mode"
    },
    "cell--textCenter": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "<code>align=\"center\"</code>"
    },
    "cell--textLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "<code>align=\"left\"</code>"
    },
    "cell--textRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "<code>align=\"right\"</code>"
    },
    "cell--withRenderer": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "the cell has a custom renderer"
    },
    "cell--rangeTop": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "it is at the top edge of a cell selection range"
    },
    "cell--rangeBottom": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "it is at the bottom edge of a cell selection range"
    },
    "cell--rangeLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "it is at the left edge of a cell selection range"
    },
    "cell--rangeRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the cell element",
      "conditions": "it is at the right edge of a cell selection range"
    },
    "cell": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the cell element" },
    "cellContent": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the element that wraps the cell content"
    },
    "cellCheckbox": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the cell checkbox element"
    },
    "cellSkeleton": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the skeleton cell element"
    },
    "checkboxInput": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the selection checkbox element"
    },
    "columnHeader--alignCenter": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "<code>headerAlign=\"center\"</code>"
    },
    "columnHeader--alignLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "<code>headerAlign=\"left\"</code>"
    },
    "columnHeader--alignRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "<code>headerAlign=\"right\"</code>"
    },
    "columnHeader--dragging": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the floating column header element",
      "conditions": "it is dragged"
    },
    "columnHeader--moving": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "it is being dragged"
    },
    "columnHeader--numeric": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "the type of the column is <code>number</code>"
    },
    "columnHeader--sortable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "the column is sortable"
    },
    "columnHeader--sorted": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "the column is sorted"
    },
    "columnHeader--filtered": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header",
      "conditions": "the column has a filter applied to it"
    },
    "columnHeader": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header element"
    },
    "columnGroupHeader": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column group header element"
    },
    "columnHeaderCheckbox": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the header checkbox cell element"
    },
    "columnHeaderDraggableContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header's draggable container element"
    },
    "rowReorderCellPlaceholder": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the row's draggable placeholder element inside the special row reorder cell"
    },
    "columnHeaderDropZone": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column headers wrapper",
      "conditions": "a column is being dragged"
    },
    "columnHeaderTitle": { "description": "Styles applied to the column header's title element;" },
    "columnHeaderTitleContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header's title container element"
    },
    "columnHeaderTitleContainerContent": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header's title excepted buttons"
    },
    "columnHeader--filledGroup": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column group header cell",
      "conditions": "not empty"
    },
    "columnHeader--emptyGroup": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the empty column group header cell"
    },
    "columnHeader--showColumnBorder": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the column group header cell",
      "conditions": "show column border"
    },
    "columnHeaders": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column headers"
    },
    "columnHeadersInner": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column headers's inner element"
    },
    "columnHeadersInner--scrollable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column headers's inner element",
      "conditions": "there is a horizontal scrollbar"
    },
    "columnSeparator--resizable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header separator",
      "conditions": "the column is resizable"
    },
    "columnSeparator--resizing": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header separator",
      "conditions": "the column is being resized"
    },
    "columnSeparator--sideLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header separator",
      "conditions": "the side is \"left\""
    },
    "columnSeparator--sideRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the column header separator",
      "conditions": "the side is \"right\""
    },
    "columnSeparator": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header separator element"
    },
    "columnsPanel": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the columns panel element"
    },
    "columnsPanelRow": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the columns panel row element"
    },
    "detailPanel": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the detail panel element"
    },
    "detailPanels": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the detail panels wrapper element"
    },
    "detailPanelToggleCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the detail panel toggle cell element"
    },
    "detailPanelToggleCell--expanded": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the detail panel toggle cell element",
      "conditions": "expanded"
    },
    "footerCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the root element of the cell inside a footer row"
    },
    "panel": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the panel element" },
    "panelHeader": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the panel header element"
    },
    "panelWrapper": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the panel wrapper element"
    },
    "panelContent": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the panel content element"
    },
    "panelFooter": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the panel footer element"
    },
    "paper": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the paper element" },
    "editBooleanCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "root of the boolean edit component"
    },
    "filterForm": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the root of the filter form component"
    },
    "filterFormDeleteIcon": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the delete icon of the filter form component"
    },
    "filterFormLogicOperatorInput": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the link operator inout of the filter form component"
    },
    "filterFormColumnInput": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column input of the filter form component"
    },
    "filterFormOperatorInput": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the operator input of the filter form component"
    },
    "filterFormValueInput": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the value input of the filter form component"
    },
    "editInputCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the root of the input component"
    },
    "filterIcon": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the filter icon element"
    },
    "footerContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the footer container element"
    },
    "iconButtonContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header icon's container"
    },
    "iconSeparator": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the column header separator icon element"
    },
    "main": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the main container element"
    },
    "menu": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the menu element" },
    "menuIcon": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the menu icon element"
    },
    "menuIconButton": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the menu icon button element"
    },
    "menuOpen": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the menu icon element",
      "conditions": "the menu is open"
    },
    "menuList": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the menu list element"
    },
    "overlayWrapper": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the overlay wrapper element"
    },
    "overlayWrapperInner": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the overlay wrapper inner element"
    },
    "overlay": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the overlay element"
    },
    "virtualScroller": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the virtualization container"
    },
    "virtualScrollerContent": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the virtualization content"
    },
    "virtualScrollerContent--overflowed": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the virtualization content",
      "conditions": "its height is bigger than the virtualization container"
    },
    "virtualScrollerRenderZone": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the virtualization render zone"
    },
    "pinnedColumns": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the pinned columns"
    },
    "pinnedColumns--left": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the left pinned columns"
    },
    "pinnedColumns--right": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the right pinned columns"
    },
    "pinnedColumnHeaders": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the pinned column headers"
    },
    "pinnedColumnHeaders--left": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the left pinned column headers"
    },
    "pinnedColumnHeaders--right": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the right pinned column headers"
    },
    "root": { "description": "Styles applied to the root element." },
    "root--densityStandard": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "density is \"standard\" (default)"
    },
    "root--densityComfortable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "density is \"comfortable\""
    },
    "root--densityCompact": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "density is \"compact\""
    },
    "root--disableUserSelection": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "user selection is disabled"
    },
    "row--editable": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the row element",
      "conditions": "the row is editable"
    },
    "row--editing": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the row element",
      "conditions": "the row is in edit mode"
    },
    "row--dragging": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the floating special row reorder cell element",
      "conditions": "it is dragged"
    },
    "row--lastVisible": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the last visible row element on every page of the grid"
    },
    "row--dynamicHeight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the row",
      "conditions": "it has dynamic row height"
    },
    "row--detailPanelExpanded": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the row",
      "conditions": "its detail panel is open"
    },
    "row": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the row element" },
    "rowCount": {
      "description": "Styles applied to {{nodeName}}.\nOnly works when pagination is disabled.",
      "nodeName": "the footer row count element to show the total number of rows"
    },
    "rowReorderCellContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the row reorder cell container element"
    },
    "rowReorderCell": {
      "description": "Styles applied to the root element of the row reorder cell"
    },
    "rowReorderCell--draggable": {
      "description": "Styles applied to the root element of the row reorder cell when dragging is allowed"
    },
    "scrollArea": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "both scroll area elements"
    },
    "scrollArea--left": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the left scroll area element"
    },
    "scrollArea--right": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the right scroll area element"
    },
    "selectedRowCount": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the footer selected row count element"
    },
    "sortIcon": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the sort icon element"
    },
    "toolbarContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the toolbar container element"
    },
    "toolbarFilterList": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the toolbar filter list element"
    },
    "withBorderColor": {
      "description": "Styles applied to {{nodeName}}, {{conditions}}.\nSets border color only.",
      "nodeName": "cells",
      "conditions": "column header and other elements that have border"
    },
    "cell--withRightBorder": {
      "description": "Styles applied the cell if `showColumnVerticalBorder={true}`."
    },
    "columnHeader--withRightBorder": {
      "description": "Styles applied the column header if `showColumnVerticalBorder={true}`."
    },
    "treeDataGroupingCell": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the root of the grouping column of the tree data"
    },
    "treeDataGroupingCellToggle": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the toggle of the grouping cell of the tree data"
    },
    "groupingCriteriaCell": {
      "description": "Styles applied to the root element of the grouping criteria cell"
    },
    "groupingCriteriaCellToggle": {
      "description": "Styles applied to the toggle of the grouping criteria cell"
    },
    "pinnedRows": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the pinned rows container"
    },
    "pinnedRows--top": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the top pinned rows container"
    },
    "pinnedRows--bottom": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the bottom pinned rows container"
    },
    "pinnedRowsRenderZone": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "pinned rows render zones"
    }
  },
  "slotDescriptions": {}
}
